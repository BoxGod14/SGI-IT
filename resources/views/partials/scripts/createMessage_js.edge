<script defer>
  let messages = document.getElementsByClassName('messages');
  let newMessage = document.createElement("div");
  let p1 = document.createElement("p");
  let p2 = document.createElement("p");
  /**
   * Función para crear los mensajes
   */
  function sendMessage() {
    //Obtener datos necesarios para el mensaje
    const data = {
      ticketId: {{ticket.id}},
      message: messager.value,
    }
    //Peticion ajax
    fetch("{{ route('MessagesController.store')}}", {
      method: 'POST',
      headers: {
          "X-CSRF-Token": document.querySelector('[name="_csrf"]').value,
          'Content-Type': 'application/json', // Especificar el tipo de contenido si estás enviando datos en formato JSON
      },
      body: JSON.stringify(data)
      })
      .then(response => {
        if (response.ok) {
          //Añadir mensaje mediante dom
          newMessage.className = "message";
          p1.textContent = "{{ t('messaje.from', {name: user.profile.fullName}) }}";
          p2.textContent = messager.value; 

          newMessage.appendChild(p1);
          newMessage.appendChild(p2);
          document.getElementById('messages').insertAdjacentHTML('afterbegin',newMessage.outerHTML);//insertAdjacentHTML permite añadir elementos sin sobreescribir otros y seleccionar en que parte se añade. 'beforeend' al final
          
          //Asegurar que no se lee como error el resultado
          document.querySelector('#response').classList.remove("errors"); 
          messager.value = "";     
        }
        else {          
          //Marcar como error
          document.querySelector('#response').classList.add("errors");
        }
          return response.json(); // Devuelve la promesa resultante de parsear el cuerpo JSON
      })
      .then(data => {
          document.querySelector('#response').textContent = data.message;          
      })
  }
</script>